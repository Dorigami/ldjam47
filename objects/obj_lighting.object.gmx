<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_light</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init lighting
surf = -1;
room_check = room;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// recalculate
if(room != room_check)
{
    room_check = room;
    
    if(room = rm_corridor || room = rm_chamber)
    {
        //init the surface
        var _cw = view_wview;
        var _ch = view_hview;
        surf = surface_create(_cw, _ch);
        surface_set_target(surf);
        draw_set_colour(c_black);
        draw_set_alpha(0);
        draw_rectangle(0, 0, _cw, _cw, false);
        surface_reset_target();
    }  
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw lighting
if(room = rm_corridor || room = rm_chamber)
{
    if !surface_exists(surf)
    {
        var _cw = view_wview;
        var _ch = view_hview;
        surf = surface_create(_cw, _ch);
        surface_set_target(surf);
        draw_set_colour(c_black);
        draw_set_alpha(0);
        draw_rectangle(0, 0, _cw, _cw, false);
        surface_reset_target();
    }   else
    {
        if (surface_exists(surf)) 
        {
            var _cw = view_wview;
            var _ch = view_hview;
            var _cx = view_xview;
            var _cy = view_yview;
            surface_set_target(surf);
            draw_set_color(c_black);
            draw_set_alpha(0.8);
            draw_rectangle(0, 0, _cw, _ch, 0);
            draw_set_blend_mode(bm_subtract);
            with (obj_player)
            {
                var _sw = sprite_width / 2;
                var _sh = sprite_height / 2;
                draw_sprite_ext(spr_light, 0, x-_cx, y-_cy, 1.5 + random(0.05), 1.5 + random(0.05), 0, c_white, 1);
            }
            with (obj_lighting)// check for the children
                {
                    var _sw = sprite_width / 2;
                    var _sh = sprite_height / 2;
                    switch(object_index)
                    {
                    case obj_torch_top:
                        draw_sprite_ext(spr_light, 0, x-_cx, y-_cy, 1.5 + random(0.05), 1.5 + random(0.05), 0, c_white, 1);
                        break;
                    case obj_torch_right:
                        draw_sprite_ext(spr_light, 0, x-_cx, y-_cy, 1.5 + random(0.05), 1.5 + random(0.05), 0, c_white, 1);
                        break;
                    case obj_torch_left:
                        draw_sprite_ext(spr_light, 0, x-_cx, y-_cy, 1.5 + random(0.05), 1.5 + random(0.05), 0, c_white, 1);
                        break;
                    }
                }
            draw_set_blend_mode(bm_normal);
            draw_set_alpha(1);
            surface_reset_target();
            draw_surface(surf, _cx, _cy);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
