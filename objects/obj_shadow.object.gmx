<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shadow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_lifeform_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init shadow
event_inherited();
image_speed = 0.1;

// movement &amp; facing
move_axis = 0;
face = 0;
spd = 7;
alarm_set(1, room_speed);

// health and damage taken
hp_max = 20;
hp = hp_max;
damage_taken = 0;

// attacking &amp; damage
attacked = false;
damage = 10;
knockback = 15;

// a.i.
sight_range = 150;
attack_range = 40;
wander_time = 5;

// state machine
state = IDLE;
state_init = true;
state_script[IDLE] = scr_shadow_state_idle;
state_script[MOVE] = scr_shadow_state_move;
state_script[ATTACK] = scr_shadow_state_attack;
state_script[HURT] = scr_shadow_state_hurt;
state_script[DEAD] = scr_shadow_state_dead;
//state_script[DASH] = scr_shadow_state;
//state_script[CAST] = scr_shadow_state;
state_script[CHASE] = scr_shadow_state_chase;
state_script[FLEE] = scr_shadow_state_flee;

//sprites
sprites[IDLE, 0] = spr_shadow_idle_right;
sprites[IDLE, 1] = spr_shadow_idle_left;
sprites[MOVE, 0] = spr_shadow_move_right;
sprites[MOVE, 1] = spr_shadow_move_left;
sprites[ATTACK, 0] = spr_shadow_attack_right;
sprites[ATTACK, 1] = spr_shadow_attack_left;
sprites[HURT, 0] = spr_shadow_hurt_right;
sprites[HURT, 1] = spr_shadow_hurt_left;
sprites[DEAD, 0] = spr_shadow_dead;
sprites[DEAD, 1] = spr_shadow_dead;
//sprites[DASH, 0] = spr_shadow;
//sprites[DASH, 1] = spr_shadow;
//sprites[CAST, 0] = spr_shadow;
//sprites[CAST, 1] = spr_shadow;
sprites[CHASE, 0] = spr_shadow_move_right;
sprites[CHASE, 1] = spr_shadow_move_left;
sprites[FLEE, 0] = spr_shadow_move_right;
sprites[FLEE, 1] = spr_shadow_move_left;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy_self 
scr_loot_drop(id);
instance_destroy();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// attack cooldown
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// wander alarm
var prop = 0.6;
state_init = true;
if(state != DEAD)
{
    if(random(1) &gt; prop) 
    {
        state = IDLE //40%
    } else {
        state = MOVE //60%
    }
}
//show_debug_message("wander alarm for " + object_get_name(object_index) + ".  state change to " + string(state));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// idle reset
if(state != DEAD)
{
    state = IDLE;
    state_init = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// control shadow
event_inherited();

if(room = rm_chamber) sight_range = 180;

// run current state
sprite_index = sprites[state, face];
script_execute(state_script[state]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// control anim endings

// end attack state
if(state = ATTACK) 
{
    attacked = false;
    state_init = true;
    state = FLEE;
    alarm_set(2, room_speed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw things
event_inherited();

if(hp/hp_max &lt; 1) draw_healthbar(x,y-6,x+32,y-3, 100*(hp/hp_max), c_red, c_green, c_green, 0, true, true);
//draw_text(x, y-60, "hp:"+string(hp)+" / "+string(hp_max) +"#state = "+ string(state) + "#alarm0 = " + string(alarm[0]) + "#alarm1 = " + string(alarm[1]));

//draw_circle(x,y,sight_range, true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,22</point>
    <point>12,16</point>
  </PhysicsShapePoints>
</object>
